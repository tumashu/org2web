#+TITLE:     org-webpage's README
#+AUTHOR:    Feng Shu
#+EMAIL:     tumashu@163.com
#+DATE:      2015-04-01


* Introduction

org-webpage is a static site generator based on [[http://orgmode.org/][org-mode]], which is a fork of Kelvin H's [[https://github.com/kelvinh/org-page][org-page]].

org-webpage provides similar features with org-page:

#+BEGIN_EXAMPLE
1) Org sources and html files managed by git
2) Incremental publication (according to =git diff= command)
3) Category support
4) Tags support (auto generated)
5) RSS support (auto generated)
6) Search engine support (auto generated)
7) A beautiful theme
8) Theme customization support
9) Commenting (implemented using disqus/duoshuo)
10) Website traffic analytics (implemented using google analytics)
11) Index/about page support (auto generated if no default is provided)
12) Highly customizable
#+END_EXAMPLE

The main differents of two projects are as follow:

1. org-page focus on personal blog, while org-webpage is main used to
   generate project website.
2. org-webpage's default config is `org-publish-project-alist' style alist,
   which can manage multi-site configs in an emacs session easily.
3. org-website find theme-files from a *themes-list* in sequence and same theme-file
   first found will be used. User can set *fallback theme* with the help of this feature.
4. org-website include a tiny emacs web server, which can be used to test publish.
5. ...

* Workflow

1. Specify a git repo where the org source
   files will be on the "source" branch and the generated html files
   will be on the "master" branch (the branch names can be
   customized). Repos may be created manually or by
   org-webpage's =owp/new-repository= command.
2. Specify a "base commit" (the most recent prior commit will be used if
   omitted). org-webpage will read changes between the latest commit
   and the specified base commit on branch "source". The changes
   will then be marked for publication.
3. org-webpage does preparation jobs.
4. Publish the changes read in step 2. A change can be an addition,
   a modification, or a deletion.  *org-webpage is designed to handle all of*
   *these kinds of changes but since deletion does not happen often, *
   *org-webpage has not implemented it yet.*
5. Update the index page for each category and tag.
6. Publication finished.

* Usage

*Here is a general introduction about how to use org-webpage, for more detailed introduction and configuration, please see
"tips.org" in the "documents" folder.*

** Installation

org-webpage is now available from the famous emacs package repo [[http://melpa.milkbox.net/][melpa]]
so the recommended way is to install it through emacs' package
management system. For more info about installation, please see
*tips.org* in the "doc" folder.

** Configuration
The follow code is [[http://tumashu.github.com][my website]]'s [[https://github.com/tumashu/tumashu.github.com/blob/source/eh-website.el][config]], you can adjust and paste it to your =.emacs= file:

#+BEGIN_SRC emacs-lisp
;; the following is only needed if you install org-page manually
(add-to-list 'load-path "path/to/org-webpage")

(require 'org-webpage)

(add-to-list 'owp/project-config-alist
             `("tumashu.github.com"
               :repository-directory "~/project/emacs-packages/tumashu.github.com"
               :site-domain "http://tumashu.github.com/"
               :site-main-title "Tumashu 的个人小站"
               :site-sub-title "(九天十地，太上忘情！！！)"
               :theme (worg)
               :source-browse-url ("Github" "https://github.com/tumashu/tumashu.github.com")
               :personal-avatar "/media/img/horse.jpg"
               :personal-duoshuo-shortname "tumashu-website"
               :web-server-docroot "~/.emacs.d/org-webpage-server/tumashu.github.com"
               :web-server-port 7654))
#+END_SRC

[[http://tumashu.github.io/chinese-pyim/][Chinese-pyim]] 's org-webpage [[https://github.com/tumashu/chinese-pyim/blob/master/chinese-pyim-devtools.el][config]] is a more complex example.

You can find more config options and theirs default values by commands:

#+BEGIN_EXAMPLE
C-h v owp/project-config-alist
C-h v owp/config-fallback
#+END_EXAMPLE

** Publication
The simplest way is run:

#+BEGIN_EXAMPLE
M-x owp/do-publication
#+END_EXAMPLE

This command will ask you some questions:

1. Which project do you want to publish?
2. Publish all org files of "XXXXX" project?
3. Publish to:  [Yes] Web server docroot, [No] Original repo.
4. Auto commit to repo?
5. Auto push to remote repo?

You can use `owp/do-publication' in elisp, which let you code
your own quickly publication command:

#+BEGIN_SRC emacs-lisp
(owp/do-publication "project-name" nil "HEAD^1" "~/org-pub/" nil)
#+END_SRC

or:

#+BEGIN_SRC emacs-lisp
(call-interactively 'owp/do-publication)
#+END_SRC

* Dependencies

1. [[http://www.gnu.org/software/emacs/][emacs]]: this is an "of-course" dependency
2. [[http://orgmode.org/][org mode]]: v8.0 is required, please use =M-x org-version <RET>= to make sure you org mode version is not less than 8.0
3. [[http://git-scm.com][git]]: a free and open source version control system
4. [[https://github.com/Wilfred/mustache.el][mustache.el]]: a mustache templating library for Emacs
5. [[http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el.cgi][htmlize.el]]: a library for syntax highlighting (usually this library is shipped with emacs)
6. [[https://github.com/magnars/dash.el][dash.el]]: a modern list library for Emacs
7. [[https://github.com/Wilfred/ht.el][ht.el]]: a modern hash-table library for Emacs
8. [[https://github.com/eschulte/emacs-web-server][web-server]]: a web server library for Emacs

* Known issues

- Currently the deletion change handler has not been implemented so
  if you deleted some org sources, you may have to manually delete
  corresponding generated html files.
- URI path change detection is not available. That is, if you make a
  post with the URI "/blog/2013/03/25/the-old-post-name" and then
  change this value in your org source, org-webpage would be unable to
  detect that this has happened. it will only publish a new html
  file for you so you need to delete the old html file related to
  the old URI manually.
